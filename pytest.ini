[tool:pytest]
# Pytest configuration file

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src
    --cov-report=html:reports/coverage
    --cov-report=term-missing
    --cov-report=xml:reports/coverage.xml
    --junit-xml=reports/junit.xml

# Minimum version
minversion = 6.0

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    gpu: marks tests that require GPU
    model: marks tests that require model loading
    data: marks tests that require data loading
    config: marks tests for configuration
    training: marks tests for training modules
    evaluation: marks tests for evaluation modules
    utils: marks tests for utility functions

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# Coverage options
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = reports/coverage

[coverage:xml]
output = reports/coverage.xml